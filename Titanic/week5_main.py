# =============================================================================
# 步驟 1: 載入所需的 Python 模組
# =============================================================================
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import japanize_matplotlib
import seaborn as sns
from IPython.display import display

# =============================================================================
# 步驟 2: 設定 numpy、pandas、matplotlib 的顯示選項
# =============================================================================
np.set_printoptions(suppress=True, precision=4)  # numpy 浮點數格式設定
pd.options.display.float_format = '{:.4f}'.format  # pandas 浮點數格式設定
plt.rcParams["font.size"] = 14  # matplotlib 字型大小設定

# =============================================================================
# 步驟 3: 載入 Titanic 資料集並重新命名欄位
# =============================================================================
df_titanic = sns.load_dataset("titanic")

# print("=== 原始資料前五行 ===")
# print(df_titanic.head())

columns_t = ['生還', '艙等', '性別', '年齡', '手足與配偶數',
             '父母與子女數', '票價', '乘船港代碼', '艙等名', '男女兒童',
             '成人男子', '甲板', '乘船港', '生還與否', '單身']

df_titanic.columns = columns_t

# print("\n=== 更改欄位名稱後的資料前五行 ===")
# print(df_titanic.head())

# =============================================================================
# 步驟 4: 檢查缺失值
# =============================================================================
# print("\n=== 各欄位的缺失值數量 ===")
# print(df_titanic.isnull().sum())

# =============================================================================
# 步驟 5: 計算欄位值的數量
# =============================================================================
# print("\n=== 乘船港的值計數 ===")
# print(df_titanic['乘船港'].value_counts())
# print()

# print("=== 生還與否的值計數 ===")
# print(df_titanic['生還與否'].value_counts())
# print()

# =============================================================================
# 步驟 6: 確認統計資訊
# =============================================================================
# print("\n=== 數值型欄位的統計描述 ===")
# display(df_titanic.describe())

# =============================================================================
# 步驟 7: 聚合函式使用 - 依性別分組求均值
# =============================================================================
# print("\n=== 依性別分組的平均值 ===")
# display(df_titanic.groupby("性別").mean(numeric_only=True))

# =============================================================================
# 步驟 8: 繪製數值型資料的直方圖
# =============================================================================
# columns_n = ['生還', '艙等', '年齡', '手足與配偶數', '父母與子女數', '票價']

# plt.rcParams['figure.figsize'] = (10, 10)

# df_titanic[columns_n].hist()
# plt.tight_layout()  # 自動調整子圖間距
# plt.show()

# =============================================================================
# 步驟 9: 繪製分類型資料的直條圖
# =============================================================================
columns_c = ["性別", "乘船港", "艙等名", "成人男子"]

plt.rcParams['figure.figsize'] = (8, 8)

for i, name in enumerate(columns_c):
    ax = plt.subplot(2, 2, i+1)
    df_titanic[name].value_counts().plot(kind='bar', title=name, ax=ax)

plt.tight_layout()
plt.show()
